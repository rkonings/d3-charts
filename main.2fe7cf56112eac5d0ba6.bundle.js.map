{"version":3,"sources":["webpack:///./src/BarChart/HorizontalBar.tsx","webpack:///./src/Elements/Label.tsx","webpack:///./src/BarChart/Horizontal.tsx","webpack:///./src/Chart.tsx","webpack:///./src/AxisLeft.tsx","webpack:///./src/GlobalStyle.tsx","webpack:///./.storybook/GlobalStyleDecorator.tsx","webpack:///./.storybook/config.ts","webpack:///./stories sync \\.stories\\.tsx$","webpack:///./stories/chart.stories.tsx","webpack:///./src/getDomain.ts","webpack:///./src/AxisBottom.tsx","webpack:///./src/Elements/Grid.tsx","webpack:///./src/BarChart/VerticalBar.tsx","webpack:///./src/BarChart/Vertical.tsx","webpack:///./src/BarChartVertical.tsx","webpack:///./src/LineChart/Line.tsx","webpack:///./src/LineChart.tsx"],"names":["BarLabel","styled","span","position","Bar","className","value","width","ref","React","createRef","useState","undefined","labelPosition","setLabelPosition","useEffect","labelSize","current","firstElementChild","getBoundingClientRect","height","x","y","Label","div","Horizonal","data","scaleBand","scaleLinear","scaleLinearDomain","domain","barHeight","bandwidth","range","map","name","salary","barWidth","Math","abs","min","Fragment","key","InnerChart","Chart","getDomain","amountTicks","ceil","chartWidth","chartHeight","d3","nice","Grid","scale","layout","AxisBottom","length","TickLabel","AxisLeft","ticks","tick","GlobalStyle","createGlobalStyle","GlobalStyleDecorator","storyFn","req","require","addDecorator","withKnobs","configure","loadStories","keys","forEach","module","webpackContext","id","webpackContextResolve","__webpack_require__","o","e","Error","code","webpackContextKeys","Object","resolve","exports","Array","fill","faker","firstName","random","number","storiesOf","add","internet","url","minValue","d","maxValue","isScaleBand","label","LineVertical","LineHorizontal","Vertical","padding","LinePoint","circle","Line","line","curve","alpha","viewBox","cx","cy","r"],"mappings":"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","file":"main.2fe7cf56112eac5d0ba6.bundle.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\ntype BarLabelPosition = 'LEFT_IN' | 'LEFT_OUT' | 'RIGHT_IN' | 'RIGHT_OUT';\n\ninterface BarLabel {\n    position?: BarLabelPosition;\n}\nexport const BarLabel = styled.span<BarLabel>`\n    position: absolute;\n    color: #fff;\n    font-size: 14px;\n\n    ${({ position }) => {\n        if (position === 'RIGHT_OUT') {\n            return `\n                right: -10px;\n                transform: translateX(100%);\n                color: #8B8B8B;\n            `;\n        } else if (position === 'RIGHT_IN') {\n            return `\n                right: 10px;\n            `;\n        } else if (position === 'LEFT_OUT') {\n            return `\n                left: -10px;\n                transform: translateX(-100%);\n                color: #8B8B8B;\n            `;\n        } else if (position === 'LEFT_IN') {\n            return `\n                left: 10px;\n            `;\n        } else {\n            return `\n                visibility: hidden;\n            `;\n        }\n    }}\n`;\n\ninterface Bar {\n    className?: string;\n    width: number;\n    height: number;\n    x: number;\n    y?: number;\n    value: number;\n}\n\nexport const Bar = styled(({ className, value, width }: Bar) => {\n    const ref = React.createRef<HTMLDivElement>();\n\n    const [labelPosition, setLabelPosition] = React.useState<\n        BarLabelPosition | undefined\n    >(undefined);\n\n    React.useEffect(() => {\n        const labelPadding = 30;\n\n        const barLabel = ref.current!.firstElementChild as HTMLDivElement;\n        const labelSize = barLabel.getBoundingClientRect().width + labelPadding;\n\n        if (labelSize > width && value >= 0) {\n            setLabelPosition('RIGHT_OUT');\n        } else if (labelSize < width && value >= 0) {\n            setLabelPosition('RIGHT_IN');\n        } else if (labelSize > width && value < 0) {\n            setLabelPosition('LEFT_OUT');\n        } else {\n            setLabelPosition('LEFT_IN');\n        }\n    });\n\n    return (\n        <div ref={ref} className={className}>\n            <BarLabel position={labelPosition}>{value}</BarLabel>\n        </div>\n    );\n})`\n    ${({ width, height, x, y }) => `\n      position: absolute;\n      width: ${width}px;\n      height: ${height}px;\n      top: ${(y || 0) + 20}px;\n      left: ${x}px;\n      background: #304FFE;\n      display:flex;\n      justify-content: flex-end;\n      align-items: center;\n  `}\n`;\n","import styled from 'styled-components';\n\ntype LabelPosition = 'LEFT' | 'RIGHT';\n\ninterface Label {\n    width: number;\n    height: number;\n    x: number;\n    y?: number;\n    position: LabelPosition;\n}\n\nexport const Label = styled.div<Label>`\n    ${({ width, height, x, y }) => `\n      position: absolute;\n      height: ${height}px;\n      width: ${width}px;\n      top: ${y}px;\n      font-size: 14px;\n    `}\n\n    ${({ x, position }) => {\n        if (position === 'LEFT') {\n            return `\n                left: ${x}px;\n            `;\n        } else {\n            return `\n                right:0;\n                text-align: right;\n            `;\n        }\n    }}\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as d3 from 'd3';\nimport { Bar } from './HorizontalBar';\nimport { Label } from '../Elements/Label';\nimport { Data } from '../Chart';\n\ninterface Horizontal {\n    scaleBand: d3.ScaleBand<string>;\n    scaleLinear: d3.ScaleLinear<number, number>;\n    className?: string;\n    data: Data[];\n}\n\nconst Horizonal = styled(\n    ({ className, data, scaleBand, scaleLinear }: Horizontal) => {\n        const scaleLinearDomain = scaleLinear.domain();\n\n        const barHeight = scaleBand.bandwidth() - 30;\n        const labelHeight = 20;\n        const width = scaleLinear.range()[1];\n\n        const labelPosition =\n            scaleLinearDomain[0] < 0 && scaleLinearDomain[1] <= 0\n                ? 'RIGHT'\n                : 'LEFT';\n\n        return (\n            <div className={className}>\n                {data.map(({ name, salary }) => {\n                    const barWidth = Math.abs(\n                        scaleLinear(salary) - scaleLinear(0)\n                    );\n                    const x = scaleLinear(Math.min(salary, 0));\n\n                    return (\n                        <React.Fragment key={name}>\n                            <Label\n                                x={scaleLinear(0)}\n                                y={scaleBand(name)}\n                                height={labelHeight}\n                                width={width}\n                                position={labelPosition}\n                            >\n                                {name}\n                            </Label>\n                            <Bar\n                                x={x}\n                                y={scaleBand(name)}\n                                height={barHeight}\n                                width={barWidth}\n                                value={salary}\n                            />\n                        </React.Fragment>\n                    );\n                })}\n            </div>\n        );\n    }\n)`\n    position: relative;\n    width: 100%;\n    top: 0;\n    left: 0;\n`;\n\nexport default Horizonal;\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as d3 from 'd3';\nimport { getDomain } from './getDomain';\nimport { AxisBottom } from './AxisBottom';\nimport { Grid } from './Elements/Grid';\nimport Horizonal from './BarChart/Horizontal';\n\ninterface InnerChart {\n    x: number;\n    width: number;\n    height: number;\n}\nconst InnerChart = styled.div<InnerChart>`\n    ${({ x, width, height }) => `\n        position:absolute;\n        left: ${x}px;\n        width: ${width}px;\n        height: ${height}px;\n    `}\n`;\n\nexport interface Data {\n    name: string;\n    salary: number;\n}\n\nexport interface Chart {\n    data: Data[];\n    className?: string;\n    width?: number;\n    height?: number;\n}\n\nconst Chart = styled(\n    ({ className, data, width = 400, height = 400 }: Chart) => {\n        const scaleLinearDomain = getDomain(data);\n\n        const axisBottomHeight = 50;\n        // const axisLeftWidth = 100;\n\n        const amountTicks = Math.ceil(width / 100);\n\n        const chartWidth = width;\n        const chartHeight = height - axisBottomHeight;\n\n        const scaleBand = d3\n            .scaleBand()\n            .domain(data.map(({ name }) => name))\n            .range([0, chartHeight]);\n\n        const scaleLinear = d3\n            .scaleLinear()\n            .domain(scaleLinearDomain)\n            .nice(amountTicks)\n            .range([0, chartWidth]);\n\n        return (\n            <div className={className}>\n                <InnerChart width={chartWidth} height={chartHeight} x={0}>\n                    <Grid\n                        scale={scaleLinear}\n                        amountTicks={amountTicks}\n                        layout=\"HORIZONTAL\"\n                        width={chartWidth}\n                        height={chartHeight}\n                    />\n\n                    <AxisBottom\n                        scale={scaleLinear}\n                        width={chartWidth}\n                        height={chartHeight}\n                        amountTicks={amountTicks}\n                    />\n                    {data.length > 0 && (\n                        <Horizonal\n                            scaleBand={scaleBand}\n                            scaleLinear={scaleLinear}\n                            data={data}\n                        />\n                    )}\n                </InnerChart>\n            </div>\n        );\n    }\n)`\n    ${({ width = 400, height = 400 }: Chart) => `\n      width: ${width}px;\n      height: ${height}px;\n      position: relative;\n    `}\n`;\n\nexport default Chart;\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as d3 from 'd3';\n\ninterface TickLabel {\n    y: number;\n    width: number;\n}\n\nexport const TickLabel = styled.div<TickLabel>`\n    ${({ y, width }) => `\n        top: ${y}px;\n        right:6px;\n        transform: translateY(-50%);\n        width: ${width}px;\n        position:absolute;\n        color: #8B8B8B;\n        display:flex;\n        justify-content: flex-end;\n\n        &::before {\n            content: '';\n            position: absolute;\n            width: 5px;\n            height: 1px;\n            background: #ccc;\n            right: -6px;\n            top: 50%;;\n        }\n    `}\n`;\n\ninterface AxisLeft {\n    className?: string;\n    scale: d3.ScaleLinear<number, number>;\n    amountTicks: number;\n    height: number;\n    width: number;\n}\n\nexport const AxisLeft = styled(\n    ({ className, scale, amountTicks }: AxisLeft) => {\n        return (\n            <div className={className}>\n                {scale.ticks(amountTicks).map((tick) => (\n                    <TickLabel key={tick} width={50} y={scale(tick)}>\n                        {tick}\n                    </TickLabel>\n                ))}\n            </div>\n        );\n    }\n)`\n    position: absolute;\n    left: 0px;\n    top: 10px;\n    height: ${({ height }) => height}px;\n    width: ${({ width }) => width}px;\n    border-right: 1px solid #f5f5f5;\n`;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n    /* @import url('https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap'); */\n    @font-face {\n      font-family: 'Jost';\n      font-style: normal;\n      font-weight: 200;\n      font-display: swap;\n      src: local('Jost* Thin'),\n      local('Jost-Thin'),\n      url('./assets/fonts/jost-VF.woff') format(\"woff-variations\"),\n      url('./assets/fonts/jost-VF.woff2') format(\"woff2-variations\"),\n      url('./assets/fonts/Jost-200-Thin.woff') format('woff'),\n      url('./assets/fonts/Jost-200-Thin.woff2') format('woff2');\n    }\n\n\n    @font-face {\n      font-family: 'Jost';\n      font-style: normal;\n      font-weight: 400;\n      font-display: swap;\n      src: local('Jost* Book'),\n      local('Jost-Book'),\n      url('./assets/fonts/jost-VF.woff') format(\"woff-variations\"),\n      url('./assets/fonts/jost-VF.woff2') format(\"woff2-variations\"),\n      url('./assets/fonts/Jost-400-Book.woff') format('woff'),\n      url('./assets/fonts/Jost-400-Book.woff2') format('woff2');\n    }\n\n    @font-face {\n      font-family: 'Jost';\n      font-style: normal;\n      font-weight: 600;\n      font-display: swap;\n      src: local('Jost* Semi'),\n      local('Jost-Semi'),\n      url('./assets/fonts/jost-VF.woff') format(\"woff-variations\"),\n      url('./assets/fonts/jost-VF.woff2') format(\"woff2-variations\"),\n      url('./assets/fonts/Jost-600-Semi.woff') format('woff'),\n      url('./assets/fonts/Jost-600-Semi.woff2') format('woff2');\n    }\n\n    @font-face {\n      font-family: 'Jost';\n      font-style: normal;\n      font-weight: 800;\n      font-display: swap;\n      src: local('Jost* Heavy'),\n      local('Jost-Heavy'),\n      url('./assets/fonts/jost-VF.woff') format(\"woff-variations\"),\n      url('./assets/fonts/jost-VF.woff2') format(\"woff2-variations\"),\n      url('./assets/fonts/Jost-800-Heavy.woff') format('woff'),\n      url('./assets/fonts/Jost-800-Heavy.woff2') format('woff2');\n    }\n\n    html, body {\n       height: 100%;\n       margin:0;\n    }\n\n    #root, #__next {\n      height: 100%;\n      width: 100%;\n    }\n\n    body {\n      font-family: Jost,-apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;\n        /* font-family: 'Roboto', sans-serif; */\n        font-weight: 400;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n    }\n\n\n`;\n\nexport default GlobalStyle;\n","import { addDecorator } from '@storybook/react';\nimport React from 'react';\n\nimport GlobalStyles from '../src/GlobalStyle';\n\nimport { createGlobalStyle } from 'styled-components';\n// https://medium.com/@cbovis/using-the-styled-components-createglobalstyle-api-with-react-storybook-e2e64255d567\n\nconst GlobalStyleDecorator = (storyFn) => {\n  return (\n    <React.Fragment>\n      <GlobalStyles />\n      {storyFn()}\n    </React.Fragment>\n  );\n};\n\nexport default GlobalStyleDecorator;\n","import { configure, addDecorator } from '@storybook/react';\nimport { withKnobs } from '@storybook/addon-knobs';\nimport GlobalStyleDecorator from './GlobalStyleDecorator';\n\n// automatically import all files ending in *.stories.tsx\nconst req = require.context('../stories', true, /\\.stories\\.tsx$/);\n\nfunction loadStories() {\n    req.keys().forEach(req);\n}\naddDecorator(withKnobs);\naddDecorator(GlobalStyleDecorator);\nconfigure(loadStories, module);\n","var map = {\n\t\"./chart.stories.tsx\": 754\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 753;","import React from 'react';\nimport { storiesOf } from '@storybook/react';\nimport { boolean, number, select, text } from '@storybook/addon-knobs';\nimport ChartDiv from '../src/Chart';\nimport BarChartVertical from '../src/BarChartVertical';\nimport LineChart from '../src/LineChart';\nimport faker from 'faker';\n\nconst data = Array(10)\n    .fill(null)\n    .map(() => {\n        return {\n            name: faker.name.firstName(),\n            salary: faker.random.number(30) * 1000,\n        };\n    });\n\nstoriesOf('Bar chart/Horizontal', module)\n    .add('Default', () => {\n        const width = number('width', 400);\n        const height = number('height', 400);\n\n        const data = Array(3)\n            .fill(null)\n            .map(() => {\n                return {\n                    name: faker.name.firstName(),\n                    salary: faker.random.number(1000) + 100,\n                };\n            });\n\n        return <ChartDiv width={width} height={height} data={data} />;\n    })\n    .add('Large labels', () => {\n        const width = number('width', 800);\n        const height = number('height', 600);\n\n        const data = Array(6)\n            .fill(null)\n            .map(() => {\n                return {\n                    name: faker.internet.url(),\n                    salary: faker.random.number(1000000) + 100,\n                };\n            });\n\n        return <ChartDiv width={width} height={height} data={data} />;\n    })\n    .add('Negative values', () => {\n        const width = number('width', 400);\n        const height = number('height', 400);\n\n        const data = [\n            { name: 'FOOBAZ', salary: -5 },\n            { name: 'FOO', salary: -20 },\n            { name: 'BAZ', salary: -10 },\n        ];\n\n        return <ChartDiv width={width} height={height} data={data} />;\n    })\n    .add('Mixed values', () => {\n        const width = number('width', 400);\n        const height = number('height', 400);\n\n        const data = [\n            {\n                name: 'FOO',\n                salary: -3000,\n            },\n            {\n                name: 'BAZ',\n                salary: -5000,\n            },\n            {\n                name: 'FOOBAZ',\n                salary: 1000,\n            },\n            {\n                name: 'BAZFOO',\n                salary: 5000,\n            },\n        ];\n\n        return <ChartDiv width={width} height={height} data={data} />;\n    });\n\nstoriesOf('Bar chart/Vertical', module)\n    .add('Default', () => {\n        const width = number('width', 400);\n        const height = number('height', 400);\n\n        const data = Array(3)\n            .fill(null)\n            .map(() => {\n                return {\n                    name: faker.name.firstName(),\n                    salary: faker.random.number(1000) + 100,\n                };\n            });\n\n        return <BarChartVertical width={width} height={height} data={data} />;\n    })\n    .add('Large labels', () => {\n        const width = number('width', 800);\n        const height = number('height', 600);\n\n        const data = Array(6)\n            .fill(null)\n            .map(() => {\n                return {\n                    name: faker.internet.url(),\n                    salary: faker.random.number(1000000) + 100,\n                };\n            });\n\n        return <BarChartVertical width={width} height={height} data={data} />;\n    })\n    .add('Negative values', () => {\n        const width = number('width', 400);\n        const height = number('height', 400);\n\n        const data = [\n            { name: 'FOOBAZ', salary: -5 },\n            { name: 'FOO', salary: -20 },\n            { name: 'BAZ', salary: -10 },\n        ];\n\n        return <BarChartVertical width={width} height={height} data={data} />;\n    })\n    .add('Mixed values', () => {\n        const width = number('width', 400);\n        const height = number('height', 400);\n\n        const data = [\n            {\n                name: 'FOO',\n                salary: -3000,\n            },\n            {\n                name: 'BAZ',\n                salary: -5000,\n            },\n            {\n                name: 'FOOBAZ',\n                salary: 1000,\n            },\n            {\n                name: 'BAZFOO',\n                salary: 5000,\n            },\n        ];\n\n        return <BarChartVertical width={width} height={height} data={data} />;\n    })\n    .add('Date values', () => {\n        const width = number('width', 400);\n        const height = number('height', 400);\n\n        const data = [\n            {\n                name: '1-1-2020',\n                salary: 10000,\n            },\n            {\n                name: '1-2-2020',\n                salary: 11000,\n            },\n            {\n                name: '1-3-2020',\n                salary: 1000,\n            },\n            {\n                name: '1-4-2020',\n                salary: 5000,\n            },\n            {\n                name: '1-5-2020',\n                salary: 1000,\n            },\n            {\n                name: '1-6-2020',\n                salary: 5000,\n            },\n            {\n                name: '1-7-2020',\n                salary: 1000,\n            },\n            {\n                name: '1-8-2020',\n                salary: 5000,\n            },\n        ];\n\n        return <BarChartVertical width={width} height={height} data={data} />;\n    });\nstoriesOf('Line chart', module)\n    .add('Default', () => {\n        const width = number('width', 400);\n        const height = number('height', 400);\n\n        const data = Array(3)\n            .fill(null)\n            .map(() => {\n                return {\n                    name: faker.name.firstName(),\n                    salary: faker.random.number(1000) + 100,\n                };\n            });\n\n        return <LineChart width={width} height={height} data={data} />;\n    })\n    .add('Large labels', () => {\n        const width = number('width', 800);\n        const height = number('height', 600);\n\n        const data = Array(6)\n            .fill(null)\n            .map(() => {\n                return {\n                    name: faker.internet.url(),\n                    salary: faker.random.number(1000000) + 100,\n                };\n            });\n\n        return <LineChart width={width} height={height} data={data} />;\n    })\n    .add('Negative values', () => {\n        const width = number('width', 400);\n        const height = number('height', 400);\n\n        const data = [\n            { name: 'FOOBAZ', salary: -5 },\n            { name: 'FOO', salary: -20 },\n            { name: 'BAZ', salary: -10 },\n        ];\n\n        return <LineChart width={width} height={height} data={data} />;\n    })\n    .add('Mixed values', () => {\n        const width = number('width', 400);\n        const height = number('height', 400);\n\n        const data = [\n            {\n                name: 'FOO',\n                salary: -3000,\n            },\n            {\n                name: 'BAZ',\n                salary: -5000,\n            },\n            {\n                name: 'FOOBAZ',\n                salary: 1000,\n            },\n            {\n                name: 'BAZFOO',\n                salary: 5000,\n            },\n        ];\n\n        return <LineChart width={width} height={height} data={data} />;\n    })\n    .add('Date values', () => {\n        const width = number('width', 400);\n        const height = number('height', 400);\n\n        const data = [\n            {\n                name: '1-1-2020',\n                salary: 10000,\n            },\n            {\n                name: '1-2-2020',\n                salary: 11000,\n            },\n            {\n                name: '1-3-2020',\n                salary: 1000,\n            },\n            {\n                name: '1-4-2020',\n                salary: 5000,\n            },\n            {\n                name: '1-5-2020',\n                salary: 1000,\n            },\n            {\n                name: '1-6-2020',\n                salary: 5000,\n            },\n            {\n                name: '1-7-2020',\n                salary: 1000,\n            },\n            {\n                name: '1-8-2020',\n                salary: 5000,\n            },\n        ];\n\n        return <LineChart width={width} height={height} data={data} />;\n    });\n","import * as d3 from 'd3';\nimport { Data } from 'Chart';\n\nexport const getDomain = (data: Data[]) => {\n    const minValue = d3.min(data, (d) => d.salary) || 0;\n    const maxValue = d3.max(data, (d) => d.salary) || 0;\n\n    if (minValue < 0 && maxValue < 0) {\n        return [minValue, 0];\n    } else if (minValue < 0) {\n        return [minValue, maxValue];\n    } else {\n        return [0, maxValue];\n    }\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as d3 from 'd3';\n\ninterface TickLabel {\n    x: number;\n    width: number;\n}\n\nexport const TickLabel = styled.div<TickLabel>`\n    ${({ x, width }) => `\n        left: ${x}px;\n        width: ${width}px;\n        position:absolute;\n        margin-left: ${-1 * width * 0.5}px;\n        text-align: center;\n        padding-top: 5px;\n        color: #8B8B8B;\n\n        &::before {\n            content: '';\n            position: absolute;\n            width: 1px;\n            height: 5px;\n            background: #ccc;\n            left: 50%;\n            top: 0;\n        }\n\n        &:first-child {\n            margin-left: 0;\n            text-align: left;\n\n            &::before {\n                left:0;\n            }\n        }\n\n        &:last-child {\n            text-align: right;\n            transform: translateX(-100%);\n            margin-left: 0;\n\n            &::before {\n                right:0;\n                left: auto;\n            }\n        }\n    `}\n`;\n\ninterface Label {\n    x?: number;\n    width: number;\n}\n\nexport const Label = styled.div<Label>`\n    ${({ x, width }) => `\n        left: ${x}px;\n        width: ${width}px;\n        text-align: center;\n        position: absolute;\n        padding-top: 5px;\n        color: #8B8B8B;\n    `}\n`;\n\nconst isScaleBand = (\n    scale: d3.ScaleLinear<number, number> | d3.ScaleBand<string>\n): scale is d3.ScaleBand<string> => {\n    return (scale as d3.ScaleLinear<number, number>).ticks === undefined;\n};\n\ninterface AxisBottom {\n    className?: string;\n    scale: d3.ScaleLinear<number, number> | d3.ScaleBand<string>;\n    amountTicks: number;\n    width: number;\n    height: number;\n}\n\nexport const AxisBottom = styled(\n    ({ className, scale, amountTicks }: AxisBottom) => {\n        return (\n            <div className={className}>\n                {!isScaleBand(scale) &&\n                    scale.ticks(amountTicks).map((tick) => (\n                        <TickLabel key={tick} width={50} x={scale(tick)}>\n                            {tick}\n                        </TickLabel>\n                    ))}\n\n                {isScaleBand(scale) &&\n                    scale.domain().map((label) => {\n                        return (\n                            <Label\n                                key={label}\n                                x={scale(label)}\n                                width={scale.bandwidth()}\n                            >\n                                {label}\n                            </Label>\n                        );\n                    })}\n            </div>\n        );\n    }\n)`\n    position: absolute;\n    bottom: 0px;\n    transform: translateY(100%);\n    width: ${({ width }) => width}px;\n    height: ${({ height }) => height}px;\n    border-top: 1px solid #f5f5f5;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface LineVertical {\n    x: number;\n}\n\nexport const LineVertical = styled.div<LineVertical>`\n    ${({ x }) => `\n      left: ${x}px;\n      top:0;\n      height: 100%;\n      width: 1px;\n      background: #f3f3e7;\n      position: absolute;\n    `}\n`;\n\ninterface LineHorizontal {\n    y: number;\n}\n\nexport const LineHorizontal = styled.div<LineHorizontal>`\n    ${({ y }) => `\n      top: ${y}px;\n      left:0;\n      height: 1px;\n      width: 100%;\n      background: #f3f3e7;\n      position: absolute;\n    `}\n`;\n\ntype GridLayout = 'HORIZONTAL' | 'VERTICAL';\n\ninterface Grid {\n    className?: string;\n    scale: d3.ScaleLinear<number, number>;\n    amountTicks: number;\n    layout: GridLayout;\n    width: number;\n    height: number;\n}\n\nexport const Grid = styled(\n    ({ className, scale, amountTicks, layout, width }: Grid) => {\n        return (\n            <div className={className}>\n                {scale.ticks(amountTicks).map((tick) => {\n                    if (layout === 'HORIZONTAL') {\n                        return <LineVertical key={tick} x={scale(tick)} />;\n                    } else {\n                        return <LineHorizontal key={tick} y={scale(tick)} />;\n                    }\n                })}\n            </div>\n        );\n    }\n)`\n    position: absolute;\n    top: 0px;\n    width: ${({ width }) => width}px;\n    height: ${({ height }) => height}px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\ntype BarLabelPosition = 'BOTTOM_IN' | 'BOTTOM_OUT' | 'TOP_IN' | 'TOP_OUT';\n\ninterface BarLabel {\n    position?: BarLabelPosition;\n}\nexport const BarLabel = styled.span<BarLabel>`\n    position: absolute;\n    width: 100%;\n    text-align: center;\n    color: #fff;\n    font-size: 14px;\n\n    ${({ position }) => {\n        if (position === 'TOP_OUT') {\n            return `\n              top: -2px;\n              transform: translateY(-100%);\n              color: #8B8B8B;\n            `;\n        } else if (position === 'TOP_IN') {\n            return `\n                top: 20px;\n            `;\n        } else if (position === 'BOTTOM_OUT') {\n            return `\n                bottom: -2px;\n                transform: translatey(-100%);\n                color: #8B8B8B;\n            `;\n        } else if (position === 'BOTTOM_IN') {\n            return `\n                bottom: 20px;\n            `;\n        } else {\n            return `\n                visibility: hidden;\n            `;\n        }\n    }}\n`;\n\ninterface Bar {\n    className?: string;\n    width: number;\n    height: number;\n    x: number;\n    y?: number;\n    value: number;\n}\n\nexport const Bar = styled(({ className, value, height }: Bar) => {\n    const ref = React.createRef<HTMLDivElement>();\n\n    const [labelPosition, setLabelPosition] = React.useState<\n        BarLabelPosition | undefined\n    >(undefined);\n\n    React.useEffect(() => {\n        const labelPadding = 30;\n\n        const barLabel = ref.current!.firstElementChild as HTMLDivElement;\n        const labelSize =\n            barLabel.getBoundingClientRect().height + labelPadding;\n\n        if (labelSize > height && value >= 0) {\n            setLabelPosition('TOP_OUT');\n        } else if (labelSize < height && value >= 0) {\n            setLabelPosition('TOP_IN');\n        } else if (labelSize > height && value < 0) {\n            setLabelPosition('BOTTOM_OUT');\n        } else {\n            setLabelPosition('BOTTOM_IN');\n        }\n    });\n\n    return (\n        <div ref={ref} className={className}>\n            <BarLabel position={labelPosition}>{value}</BarLabel>\n        </div>\n    );\n})`\n    ${({ width, height, x, y }) => `\n      position: absolute;\n      width: ${width}px;\n      height: ${height}px;\n      top: ${y || 0}px;\n      left: ${x}px;\n      background: #304FFE;\n  `}\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as d3 from 'd3';\nimport { Bar } from './VerticalBar';\nimport { Data } from '../Chart';\n\ninterface Vertical {\n    scaleBand: d3.ScaleBand<string>;\n    scaleLinear: d3.ScaleLinear<number, number>;\n    className?: string;\n    data: Data[];\n}\n\nconst Vertical = styled(\n    ({ className, data, scaleBand, scaleLinear }: Vertical) => {\n        const barWidth = scaleBand.bandwidth();\n\n        return (\n            <div className={className}>\n                {data.map(({ name, salary }) => {\n                    const barHeight = Math.abs(\n                        scaleLinear(salary) - scaleLinear(0)\n                    );\n\n                    const y = scaleLinear(Math.min(salary, 0)) - barHeight;\n\n                    return (\n                        <React.Fragment key={name}>\n                            <Bar\n                                x={scaleBand(name) ?? 0}\n                                y={y}\n                                height={barHeight}\n                                width={barWidth}\n                                value={salary}\n                            />\n                        </React.Fragment>\n                    );\n                })}\n            </div>\n        );\n    }\n)`\n    position: relative;\n    width: 100%;\n    top: 0;\n    left: 0;\n`;\n\nexport default Vertical;\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as d3 from 'd3';\nimport { getDomain } from './getDomain';\nimport { AxisBottom } from './AxisBottom';\nimport { AxisLeft } from './AxisLeft';\nimport { Grid } from './Elements/Grid';\nimport Vertical from './BarChart/Vertical';\n\nexport interface Data {\n    name: string;\n    salary: number;\n}\n\nexport interface Chart {\n    data: Data[];\n    className?: string;\n    width?: number;\n    height?: number;\n}\n\ninterface InnerChart {\n    x: number;\n    width: number;\n    height: number;\n}\nconst InnerChart = styled.div<InnerChart>`\n    ${({ x, width, height }) => `\n        position:absolute;\n        left: ${x}px;\n        width: ${width}px;\n        height: ${height}px;\n    `}\n`;\n\nconst Chart = styled(\n    ({ className, data, width = 400, height = 400 }: Chart) => {\n        const scaleLinearDomain = getDomain(data);\n\n        const axisBottomHeight = 50;\n        const axisLeftWidth = 100;\n\n        const amountTicks = Math.ceil(width / 100);\n\n        const chartWidth = width - axisLeftWidth;\n        const chartHeight = height - axisBottomHeight;\n\n        const scaleBand = d3\n            .scaleBand()\n            .domain(data.map(({ name }) => name))\n            .padding(0.1)\n            .range([0, chartWidth]);\n\n        const scaleLinear = d3\n            .scaleLinear()\n            .domain(scaleLinearDomain)\n            .nice(amountTicks)\n            .range([chartHeight, 0]);\n\n        return (\n            <div className={className}>\n                <InnerChart\n                    width={chartWidth}\n                    height={chartHeight}\n                    x={axisLeftWidth}\n                >\n                    <Grid\n                        scale={scaleLinear}\n                        amountTicks={amountTicks}\n                        layout=\"VERTICAL\"\n                        width={chartWidth}\n                        height={chartHeight}\n                    />\n                    {data.length > 0 && (\n                        <Vertical\n                            scaleBand={scaleBand}\n                            scaleLinear={scaleLinear}\n                            data={data}\n                        />\n                    )}\n                    <AxisBottom\n                        scale={scaleBand}\n                        width={chartWidth}\n                        height={axisBottomHeight}\n                        amountTicks={amountTicks}\n                    />\n                </InnerChart>\n\n                <AxisLeft\n                    height={chartHeight}\n                    scale={scaleLinear}\n                    amountTicks={amountTicks}\n                    width={axisLeftWidth}\n                />\n            </div>\n        );\n    }\n)`\n    ${({ width = 400, height = 400 }: Chart) => `\n      width: ${width}px;\n      height: ${height}px;\n      position: relative;\n      padding-top: 10px;\n      box-sizing: border-box;\n    `}\n`;\n\nexport default Chart;\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as d3 from 'd3';\nimport { Data } from '../Chart';\n\ninterface LinePoint {\n    x: number;\n    y: number;\n}\n\nconst LinePoint = styled.circle``;\n\ninterface Line {\n    scaleBand: d3.ScaleBand<string>;\n    scaleLinear: d3.ScaleLinear<number, number>;\n    className?: string;\n    data: Data[];\n}\n\nexport const Line = styled(\n    ({ className, scaleBand, scaleLinear, data }: Line) => {\n        const line = d3\n            .line<Data>()\n            .x((d) => {\n                return (scaleBand(d.name) ?? 0) + scaleBand.bandwidth() * 0.5;\n            })\n            .y(function (d) {\n                return scaleLinear(d.salary);\n            })\n            .curve(d3.curveCatmullRom.alpha(0.5));\n\n        const width = scaleBand.range()[1];\n        const height = scaleLinear.range()[0];\n\n        return (\n            <div className={className}>\n                <svg\n                    width={width}\n                    height={height}\n                    viewBox={`0 0 ${width} ${height}`}\n                >\n                    <path d={line(data) ?? undefined} />\n                    {data.map(({ name, salary }) => {\n                        return (\n                            <LinePoint\n                                key={name}\n                                cx={\n                                    (scaleBand(name) || 0) +\n                                    scaleBand.bandwidth() * 0.5\n                                }\n                                cy={scaleLinear(salary)}\n                                r=\"4\"\n                                fill=\"#7685da\"\n                            />\n                        );\n                    })}\n                </svg>\n            </div>\n        );\n    }\n)`\n    position: relative;\n    width: 100%;\n    top: 0;\n    left: 0;\n\n    path {\n        stroke: #304ffe;\n        stroke-width: 2px;\n        fill: none;\n    }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as d3 from 'd3';\nimport { getDomain } from './getDomain';\nimport { AxisBottom } from './AxisBottom';\nimport { AxisLeft } from './AxisLeft';\nimport { Grid } from './Elements/Grid';\nimport { Line } from './LineChart/Line';\n\nexport interface Data {\n    name: string;\n    salary: number;\n}\n\nexport interface Chart {\n    data: Data[];\n    className?: string;\n    width?: number;\n    height?: number;\n}\n\ninterface InnerChart {\n    x: number;\n    width: number;\n    height: number;\n}\nconst InnerChart = styled.div<InnerChart>`\n    ${({ x, width, height }) => `\n        position:absolute;\n        left: ${x}px;\n        width: ${width}px;\n        height: ${height}px;\n    `}\n`;\n\nconst Chart = styled(\n    ({ className, data, width = 400, height = 400 }: Chart) => {\n        const scaleLinearDomain = getDomain(data);\n\n        const axisBottomHeight = 50;\n        const axisLeftWidth = 100;\n\n        const amountTicks = Math.ceil(width / 100);\n\n        const chartWidth = width - axisLeftWidth;\n        const chartHeight = height - axisBottomHeight;\n\n        const scaleBand = d3\n            .scaleBand()\n            .domain(data.map(({ name }) => name))\n            .padding(0.1)\n            .range([0, chartWidth]);\n\n        const scaleLinear = d3\n            .scaleLinear()\n            .domain(scaleLinearDomain)\n            .nice(amountTicks)\n            .range([chartHeight, 0]);\n\n        return (\n            <div className={className}>\n                <InnerChart\n                    width={chartWidth}\n                    height={chartHeight}\n                    x={axisLeftWidth}\n                >\n                    <Grid\n                        scale={scaleLinear}\n                        amountTicks={amountTicks}\n                        layout=\"VERTICAL\"\n                        width={chartWidth}\n                        height={chartHeight}\n                    />\n                    {data.length > 0 && (\n                        <Line\n                            scaleBand={scaleBand}\n                            scaleLinear={scaleLinear}\n                            data={data}\n                        />\n                    )}\n                    <AxisBottom\n                        scale={scaleBand}\n                        width={chartWidth}\n                        height={axisBottomHeight}\n                        amountTicks={amountTicks}\n                    />\n                </InnerChart>\n\n                <AxisLeft\n                    height={chartHeight}\n                    scale={scaleLinear}\n                    amountTicks={amountTicks}\n                    width={axisLeftWidth}\n                />\n            </div>\n        );\n    }\n)`\n    ${({ width = 400, height = 400 }: Chart) => `\n      width: ${width}px;\n      height: ${height}px;\n      position: relative;\n      box-sizing: border-box;\n      padding-top: 10px;\n    `}\n`;\n\nexport default Chart;\n"],"sourceRoot":""}